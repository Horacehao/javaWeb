<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weibo.dashboard.dao.BlogMapper">
	<resultMap id="postMap" type="com.weibo.dashboard.entity.Post">
		<id property="id" column="id" javaType="int"/>
		<result property="date" column="date" javaType="Date"/>
		<result property="authorName" column="author_name" javaType="String"/>
		<result property="content" column="content" javaType="String"/>
		<result property="likes" column="likes" javaType="int"/>
		<collection property="commentList" column="commentList" ofType="com.weibo.dashboard.entity.Comment">
			<result property="cDate" column="c_date" javaType="Date"/>
			<result property="cContent" column="c_content" javaType="String"/>
			<result property="cAuthorName" column="c_author_name" javaType="String"/>
		</collection>
	</resultMap>


	<resultMap id="blogMap" type="com.weibo.dashboard.entity.Blog">
		<id property="id" column="id" jdbcType="INTEGER"/>
		<result property="title" column="title" jdbcType="VARCHAR"/>
		<result property="author" column="author" jdbcType="VARCHAR"/>
		<result property="author_id" column="author_id" jdbcType="INTEGER"/>
		<result property="created_at" column="created_at" jdbcType="DATE"/>
		<result property="updated_at" column="updated_at" jdbcType="DATE"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
	</resultMap>
	<select id="findList" resultMap="blogMap">
		select * from blogs  order by blogs.created_at desc
	</select>

	<select id="postByUser" resultMap="postMap">
		select * from posts,comments where post_id = posts.id and posts.author_name = #{userName} order by posts.date desc
	</select>
	<insert id="insert" parameterType="com.weibo.dashboard.entity.Post" useGeneratedKeys="true" keyProperty="id">
		insert into posts
		(date,author_name,content)values
		(now(),#{authorName},#{content})
	</insert>
	<delete id="delete">
		delete from posts where id=#{id}
	</delete>
	<update id="like">
		update posts set likes=IF(likes IS NULL, 1,likes+1)
		where id=#{id}
	</update>
	<update id="dislike">
		update posts set likes=IF(likes >0, likes-1,0) where id=#{id}
	</update>
</mapper>


<!--

		INSERT INTO `weibo`.`blogs` (`id`, `title`, `author`, `author_id`, `created_at`, `updated_at`, `content`) VALUES ('1', '第一个博客', 'root', '1', '2018-06-05 09:00:00', '2018-06-05 09:00:00', '这是第一个博客');
		INSERT INTO `weibo`.`blogs` (`id`, `title`, `author`, `author_id`, `created_at`, `updated_at`, `content`) VALUES ('2', '第二个博客', 'root', '1', '2018-06-05 09:00:01', '2018-06-05 09:00:01', '这是第二个博客');
-->
